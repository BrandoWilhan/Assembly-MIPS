
.text

li $a0, 8

fibonacci_recursiva:
	addi $sp, $sp, -8 # prepara a pilha para receber 2 itens
	sw $ra, 4($sp) # empilha $ra (End. Retorno)
	sw $a0, 0($sp) # empilha $a0 (n)
	bgt $a0, 1, L1 # se n > 1, vá para L1 [se n chegou em 1 v0 = fib(0), v1 = fib(0)]
	addi $v0, $zero, 1 # valor de retorno de fib(1) é 1
	addi $v1, $zero, 1 # valor de retorno de fib(0) é 1
	addi $sp, $sp, 8 # remove 2 itens da pilha
	jr $ra # retorne para depois de jal
L1:
	addi $a0, $a0, -1 # argumento passa a ser (n-1)
	jal fibonacci_recursiva # calcula a fibonnaci para (n-1)
	lw $a0, 0($sp) # restaura o valor de (n)
	lw $ra, 4($sp) # restaura o endereço de retorno
	addi $sp, $sp, 8 # retira 3 itens da pilha.
	add $t0, $v1, $v0 # retorne fib(n-1) + fib(n-2)
	move $v1, $v0
	move $v0, $t0
	jr $ra # retorne para a chamadora